<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!--若proxy-target-class配置为true，则不论代理目标是类（没有实现接口的类）还是接口（有实现接口的类），强制使用cglib进行动态代理；
    若proxy-target-class配置为false,如果代理目标是接口（有实现接口的类），
    则使用jdk的动态代理；如果代理目标是类（没有实现接口的类），则使用cglib进行动态代理-->
    <aop:aspectj-autoproxy proxy-target-class="false" />

    <!--<bean id="aspect" class="com.lewis.master.common.aop.TestAspect"/>

    <aop:config proxy-target-class="true">
        <aop:pointcut id="pointCut"
                      expression="execution(* com.lewis.master.service.impl.HelloServiceImpl.getStudent(..))"/>
        <aop:aspect ref="aspect">
            <aop:before method="doBefore" pointcut-ref="pointCut"/>
            <aop:after method="doAfter" pointcut-ref="pointCut"/>
        </aop:aspect>
    </aop:config>-->
</beans>